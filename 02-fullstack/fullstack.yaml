apiVersion: v1
data:
  PING_IDENTITY_ACCEPT_EULA: "YES"
  SERVER_PROFILE_PATH: baseline/pingaccess
  SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles.git
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    role: pingaccess
  name: pingaccess-environment-variables
---
apiVersion: v1
data:
  PING_IDENTITY_ACCEPT_EULA: "YES"
  SERVER_PROFILE_PATH: baseline/pingdatagovernance
  SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles.git
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    role: pingdatagovernance
  name: pingdatagovernance-environment-variables
---
apiVersion: v1
data:
  HTTPS_PORT: "8443"
  PING_EXTERNAL_BASE_URL: pingdatagovernancepap-ivan.ping-devops.com
  PING_IDENTITY_ACCEPT_EULA: "YES"
  SERVER_PROFILE_PATH: pdg-pap-integration/pingdatagovernancepap
  SERVER_PROFILE_URL: https://github.com/pingidentity/pingidentity-server-profiles.git
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    role: pingdatagovernancepap
  name: pingdatagovernancepap-environment-variables
---
apiVersion: v1
data:
  PING_IDENTITY_ACCEPT_EULA: "YES"
  SERVER_PROFILE_PATH: baseline/pingdirectory
  SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles.git
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    role: pingdirectory
  name: pingdirectory-environment-variables
---
apiVersion: v1
data:
  PING_IDENTITY_ACCEPT_EULA: "YES"
  SERVER_PROFILE_PATH: baseline/pingfederate
  SERVER_PROFILE_URL: https://www.github.com/pingidentity/pingidentity-server-profiles.git
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    role: pingfederate
  name: pingfederate-environment-variables
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingaccess
  name: pingaccess
spec:
  ports:
  - name: pa-admin
    port: 9000
  - name: pa-app
    port: 3000
  selector:
    role: pingaccess
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingdataconsole
  name: pingdataconsole
spec:
  ports:
  - name: https
    port: 8443
  selector:
    role: pingdataconsole
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingdatagovernance
  name: pingdatagovernance
spec:
  ports:
  - name: http
    port: 80
  - name: https
    port: 443
  - name: ldaps
    port: 636
  selector:
    role: pingdatagovernance
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingdatagovernancepap
  name: pingdatagovernancepap
spec:
  ports:
  - name: https
    port: 8443
  selector:
    role: pingdatagovernancepap
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingdirectory
  name: pingdirectory
spec:
  clusterIP: None
  ports:
  - name: ldaps
    port: 636
  - name: ssl
    port: 443
  - name: ldap
    port: 389
  selector:
    role: pingdirectory
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: pingfederate
  name: pingfederate
spec:
  ports:
  - name: pf-console
    port: 9999
  - name: pf-runtime
    port: 9031
  selector:
    role: pingfederate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingaccess
  name: pingaccess
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingaccess
  template:
    metadata:
      labels:
        role: pingaccess
      name: pingaccess
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingaccess-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        image: pingidentity/pingaccess:6.0.0-alpine-edge
        name: pingaccess
        ports:
        - containerPort: 9000
        - containerPort: 3000
        resources:
          limits:
            cpu: "1"
            memory: 1.5Gi
          requests:
            cpu: "1"
            memory: 1.5Gi
      initContainers:
      - command:
        - sh
        - -c
        - until curl --connect-timeout 1 --silent -k https://pingfederate:9999/pingfederate/app
          ; do echo waiting for admin ; sleep 2 ; done
        image: curlimages/curl:latest
        name: init
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingdataconsole
  name: pingdataconsole
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingdataconsole
  template:
    metadata:
      labels:
        role: pingdataconsole
      name: pingdataconsole
    spec:
      containers:
      - image: pingidentity/pingdataconsole:edge
        name: pingdataconsole
        ports:
        - containerPort: 8443
        resources:
          limits:
            cpu: "1"
            memory: 1.5Gi
          requests:
            cpu: "1"
            memory: 1.5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingdatagovernance
  name: pingdatagovernance
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingdatagovernance
  template:
    metadata:
      labels:
        role: pingdatagovernance
      name: pingdatagovernance
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingdatagovernance-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        image: pingidentity/pingdatagovernance:edge
        name: pingdatagovernance
        ports:
        - containerPort: 80
        - containerPort: 443
        - containerPort: 636
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 2Gi
      initContainers:
      - command:
        - sh
        - -c
        - until curl --connect-timeout 1 --silent -k https://pingdirectory:443/directory/v1
          ; do echo waiting for admin ; sleep 2 ; done
        image: curlimages/curl:latest
        name: init
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingdatagovernancepap
  name: pingdatagovernancepap
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingdatagovernancepap
  template:
    metadata:
      labels:
        role: pingdatagovernancepap
      name: pingdatagovernancepap
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingdatagovernancepap-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        image: pingidentity/pingdatagovernancepap:edge
        name: pingdatagovernancepap
        ports:
        - containerPort: 8443
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    role: pingfederate
  name: pingfederate
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingfederate
  template:
    metadata:
      labels:
        role: pingfederate
      name: pingfederate
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingfederate-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        image: pingidentity/pingfederate:edge
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 1
          httpGet:
            path: /pingfederate/app
            port: 9999
            scheme: HTTPS
          initialDelaySeconds: 100
          periodSeconds: 1
        name: pingfederate
        ports:
        - containerPort: 9999
        - containerPort: 9031
        readinessProbe:
          httpGet:
            path: /pingfederate/app
            port: 9999
            scheme: HTTPS
          periodSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 1.5Gi
          requests:
            cpu: "1"
            memory: 1.5Gi
      initContainers:
      - command:
        - sh
        - -c
        - until curl --connect-timeout 1 --silent -k https://pingdirectory:443/directory/v1
          ; do echo waiting for admin ; sleep 2 ; done
        image: curlimages/curl:latest
        name: init
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    role: pingdirectory
  name: pingdirectory
spec:
  replicas: 1
  selector:
    matchLabels:
      role: pingdirectory
  serviceName: pingdirectory
  template:
    metadata:
      labels:
        role: pingdirectory
      name: pingdirectory
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: pingdirectory-environment-variables
        - secretRef:
            name: devops-secret
            optional: true
        image: pingidentity/pingdirectory:edge
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - /preStop.sh
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - /opt/liveness.sh
          initialDelaySeconds: 300
          periodSeconds: 30
        name: pingdirectory
        ports:
        - containerPort: 636
        - containerPort: 443
        - containerPort: 389
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - /opt/liveness.sh
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: "2"
            memory: 2Gi
      terminationGracePeriodSeconds: 300
